Instructions for "https://android-build.linaro.org/builds/~linaro-android-restricted/juice-base-aosp/":https://android-build.linaro.org/builds/~linaro-android-restricted/juice-base-aosp/

h2. Prerequisites

To clone the sources you must be able to ssh to git.linaro.org and be part of the big-little-switcher-private group. Contact "Philip Colmer" <philip.colmer@linaro.org> for access requests.

Install build dependencies on Ubuntu:
<pre>
  $ sudo add-apt-repository ppa:linaro-maintainers/tools
  $ sudo apt-get update
  $ sudo apt-get install gnupg flex bison gperf build-essential zip curl zlib1g-dev libc6-dev lib32ncurses5-dev x11proto-core-dev libx11-dev lib32z1-dev libgl1-mesa-dev g++-multilib mingw32 tofrodos python-markdown libxml2-utils xsltproc uboot-mkimage openjdk-6-jdk openjdk-6-jre vim-common python-parted python-yaml wget uuid-dev iasl
</pre>

You can also download linaro android build script(linaro_android_build_cmds.sh) from Downloads section at https://android-build.linaro.org/builds/~linaro-android-restricted/juice-base-aosp to do a complete Juice build from scratch.

h2. Get the source

<pre>
  $ curl "http://android.git.linaro.org/gitweb?p=tools/repo.git;a=blob_plain;f=repo;hb=refs/heads/stable" > repo
  $ chmod +x repo
  $ ./repo init -u ssh://$USER@linaro-private.git.linaro.org/srv/linaro-private.git.linaro.org/android/manifest.git -b linaro_android_4.4.2_juice -m vexpress-juice-aosp.xml
  $ sed -i "s/linaro-big-little-switcher-bot/$USER/" .repo/manifest.xml
  $ ./repo sync # this may take some time
</pre>

h2. Build

<pre>
  $ export CPUS=`grep -c processor /proc/cpuinfo`
  $ export TARGET_PRODUCT=vexpress
  $ export TARGET_SIMULATOR=false
  $ export TARGET_BUILD_VARIANT=eng
  $ export DEBUG_NO_STRICT_ALIASING=yes
  $ export DEBUG_NO_STDCXX11=yes
  $ export BUILD_FS_IMAGE=1
  $ export ANDROID_64=true
  $ export BIONIC_TESTS=1
  $ . build/envsetup.sh
  $ make -j${CPUS} boottarball systemtarball userdatatarball
</pre>

h2. Get linaro image tools

Run these commands to get all the dependencies for linaro-image-tools
<pre>
  $ sudo add-apt-repository ppa:linaro-maintainers/tools
  $ sudo apt-get update
  $ sudo apt-get install linaro-image-tools
</pre>
If you're using a "tip" build then we suggest you use the tip of linaro-image-tools from http://git.linaro.org/infrastructure/linaro-image-tools.git

h2. Create binary for ARM FVP Base AEMv8 models

Run linaro image tools

pre. $ linaro-android-media-create --image_file mmc.bin --image_size 2000M --dev vexpress --system system.tar.bz2 --userdata userdata.tar.bz2 --boot boot.tar.bz2

If you're using tip of linaro image tools

pre. $ ./linaro-image-tools/linaro-android-media-create --image_file mmc.bin --image_size 2000M --dev vexpress --system system.tar.bz2 --userdata userdata.tar.bz2 --boot boot.tar.bz2

h2. Extract the preboot files

pre. tar -jxvf boot.tar.bz2

h2. Setup the runtime environment

<pre>
  $ export ARMLMD_LICENSE_FILE="8224@localhost"
  $ ssh -L 8224:localhost:8224 -L 18224:localhost:18224 -N $USER@flexlm.linaro.org
</pre>

h2. Running the models

<pre>
  $ cd boot
  $ /path/to/FVP_Base_AEMv8A-AEMv8A/models/Linux64_GCC-4.1/FVP_Base_AEMv8A-AEMv8A \
        -C pctl.startup=0.0.0.0 \
        -C bp.secure_memory=0 \
        -C cluster0.NUM_CORES=1 \
        -C cluster1.NUM_CORES=1 \
        -C cache_state_modelled=0 \
        -C bp.pl011_uart0.untimed_fifos=1 \
        -C bp.secureflashloader.fname=bl1.bin \
        -C bp.flashloader0.fname=uefi_fvp-base.bin \
        -C bp.virtioblockdevice.image_path=mmc.bin
</pre>

h3. Black screen

The boot screen has been disabled to speed up booting. This means you may not see anything on the CLCD terminal for a while depending on the performance of the machine the model is running on. For example a first boot on a 2 GHz machine with 32 GB of RAM took 10 minutes. Subsequent boots should take approximately half the time to boot.

h2. Console redirection

To redirect the console open a terminal and run

pre. telnet 127.0.0.1 5000

h2. Run the Android SDK

h3. Attach ADB

ADB on FVP Base models are supported over network. Follow the instructions here https://wiki.linaro.org/Internal/Projects/Juice/SetupNetworkingOnModelsUsingBridges to setup networking and use adb.

You can also run all of the standard Android SDK tools. Learn more at "http://developer.android.com/sdk/index.html":http://developer.android.com/sdk/index.html
